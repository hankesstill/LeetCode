/**
 * Copyright (C), 2015-2021, XXX有限公司
 * FileName: _13_找出数组中重复的数字
 * Author:   Hankesstill
 * Date:     2021/4/13 21:08
 * History:
 * <author>          <time>          <version>          <desc>
 * 作者姓名           修改时间           版本号              描述
 */
package com.acwing.easy;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

/**
 * 给定一个长度为 n 的整数数组 nums，数组中所有的数字都在 0∼n−1 的范围内。
 * 数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。
 * 请找出数组中任意一个重复的数字。
 * 注意：如果某些数字不在 0∼n−1 的范围内，或数组中不包含重复数字，则返回 -1；
 * 样例
 * 给定 nums = [2, 3, 5, 4, 3, 2, 6, 7]。
 * 返回 2 或 3。
 *
 * @author Hankesstill
 * @date 2021/4/13 21:08
 */
public class _13_找出数组中重复的数字 {
	public static void main(String[] args) {
		int[] nums = {2, 3, 5, 4, 3, 2, 6, 7};
		int[] nums2 = {165, 170, 287, 92, 173, 249, 219, 130, 129, 293, 144, 214, 230, 60, 10, 111, 107, 154, 138, 36, 51, 109, 163, 17, 280, 156, 107, 237, 89, 126, 274, 60, 227, 137, 239, 32, 19, 243, 197, 68, 282, 70, 226, 182, 181, 130, 184, 58, 176, 215, 169, 87, 154, 164, 198, 128, 234, 182, 122, 282, 240, 242, 150, 173, 54, 116, 150, 151, 82, 248, 136, 252, 78, 220, 65, 94, 154, 3, 143, 6, 133, 26, 292, 9, 247, 230, 68, 8, 274, 97, 79, 151, 107, 95, 26, 247, 11, 213, 62, 4, 259, 170, 229, 193, 262, 227, 129, 107, 174, 15, 148, 123, 45, 77, 247, 33, 223, 158, 244, 185, 295, 150, 288, 291, 68, 266, 208, 295, 274, 183, 229, 168, 123, 161, 259, 10, 213, 143, 288, 99, 241, 111, 247, 291, 178, 279, 181, 77, 180, 140, 270, 228, 222, 43, 25, 45, 124, 257, 167, 98, 180, 169, 153, 190, 279, 171, 188, 119, 4, 250, 192, 188, 292, 82, 57, 155, 189, 17, 43, 76, 14, 278, 94, 261, 129, 137, 217, 229, 29, 200, 128, 263, 192, 265, 260, 35, 118, 20, 146, 71, 93, 261, 79, 152, 234, 87, 208, 53, 185, 256, 76, 182, 248, 70, 106, 267, 262, 193, 230, 278, 185, 70, 221, 159, 53, 138, 6, 39, 42, 119, 202, 219, 193, 270, 293, 276, 289, 111, 91, 30, 125, 233, 125, 108, 95, 8, 260, 47, 188, 193, 66, 183, 125, 93, 286, 128, 174, 134, 200, 57, 116, 9, 36, 180, 237, 108, 110, 191, 259, 23, 18, 130, 225, 158, 121, 59, 275, 5, 38, 278, 143, 281, 108, 157, 4, 193, 226, 280, 136, 259, 203, 234, 22, 26, 231, 29, 23, 230, 69, 207};
		System.out.println(duplicateInArray(nums));
		System.out.println(duplicateInArray(nums2));
	}

	public static int duplicateInArray(int[] nums) {
		Map<Integer, Integer> map = new HashMap(nums.length);
		if (0 == nums.length) {
			return -1;
		}
		for (int i = 0; i < nums.length; i++) {
			if (nums[i] < 0 || nums[i] > nums.length - 1) {
				return -1;
			}
			if (map.containsKey(nums[i])) {
				Integer count = map.get(nums[i]);
				map.put(nums[i], count + 1);
			} else {
				map.put(nums[i], 1);
			}
		}
		Set<Integer> keys = map.keySet();
		for (Integer key : keys) {
			if (1 == map.get(key)) {
				return -1;
			} else {
				return key;
			}
		}
		return 0;
	}
}

